name: Build
on:
  push:

jobs:
  linux-build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hairyhenderson/gomplate-ci-build:latest
    steps:
      - run: |
          git config --global user.email "bogus@example.com"
          git config --global user.name "Someone"
      - uses: actions/checkout@v1
        with:
          path: ./src/github.com/${{ github.repository }}
      - run: make build
        env:
          GOPATH: ${{ runner.workspace }}
      - name: Save binary
        uses: actions/upload-artifact@v1
        with:
          name: gomplate
          path: bin/gomplate
      - name: make test
        run: |
          [ -n "$CC_TEST_REPORTER_ID" ] && cc-test-reporter before-build
          make test
          EXIT_CODE=$?

          if [ -n "$CC_TEST_REPORTER_ID" ]; then
            # workaround from https://github.com/codeclimate/test-reporter/issues/378
            export PREFIX=$(basename $(go list -m))
            cc-test-reporter after-build -t gocov -p $PREFIX --exit-code $EXIT_CODE
          fi
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GOPATH: ${{ runner.workspace }}
      - run: make integration
        env:
          GOPATH: ${{ runner.workspace }}
  windows-build:
    runs-on: windows-latest
    env:
      TMP: D:\tmp
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16.x
      - run: |
          git config --global user.email "bogus@example.com"
          git config --global user.name "Someone"
      - uses: actions/checkout@v1
        with:
          path: ./src/github.com/${{ github.repository }}
      - run: make build
        env:
          GOPATH: ${{ runner.workspace }}
      - name: Save binary
        uses: actions/upload-artifact@v1
        with:
          name: gomplate.exe
          path: bin/gomplate.exe
      - run: make test
        env:
          GOPATH: ${{ runner.workspace }}
      - run: make integration
        env:
          GOPATH: ${{ runner.workspace }}
  lint:
    runs-on: ubuntu-latest
    container:
      image: 'hairyhenderson/gomplate-ci-build:latest'
    steps:
      - uses: actions/checkout@v1
        with:
          path: ./src/github.com/${{ github.repository }}
      - run: make ci-lint
